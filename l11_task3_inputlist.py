# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class FallInput(Exception):
    def __init__(self, text):
        self.text = text


def inp_valid():
    val = input("Введите число (или 'stop' для выхода): ")
    if val.isdigit() or ("-" in val and val[1:].isdigit()):
        return val
    elif val == 'stop':
        return val
    else:
        raise FallInput("Вы ввели не число")


lst = []
while True:
    try:
        n = inp_valid()
        if n == 'stop':
            print(f"Вы вышли из программы.")
            break
        lst.append(n)
    except FallInput as error:
        print(error)
    finally:
        print(lst)
